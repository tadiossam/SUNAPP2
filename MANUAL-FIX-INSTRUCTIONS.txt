============================================================
   HOW TO FIX: DATABASE_URL ERROR ON WINDOWS
============================================================

The problem: Your local server/index.ts file doesn't have the dotenv code.

SOLUTION: Copy the EXACT content below into your server/index.ts file.

============================================================
STEP-BY-STEP INSTRUCTIONS:
============================================================

1. Open server/index.ts in Notepad:
   - Right-click: server/index.ts
   - Open with: Notepad

2. DELETE EVERYTHING in the file (Ctrl+A, then Delete)

3. COPY the entire content from the section below that says:
   "START COPYING FROM HERE"
   
4. PASTE it into the empty server/index.ts file

5. SAVE the file (Ctrl+S)

6. Close Notepad

7. Run: npx tsx server/index.ts

============================================================
START COPYING FROM HERE (include this line):
============================================================
import dotenv from "dotenv";
dotenv.config();

import express, { type Request, Response, NextFunction } from "express";
import { registerRoutes } from "./routes";
import { setupVite, serveStatic, log } from "./vite";
import { setupAuth } from "./auth";
import { seedProductionUsers } from "./seed-production";

const app = express();
app.use(express.json({ limit: '5mb' }));
app.use(express.urlencoded({ extended: false, limit: '5mb' }));

// Setup authentication before routes
setupAuth(app);

app.use((req, res, next) => {
  const start = Date.now();
  const path = req.path;
  let capturedJsonResponse: Record<string, any> | undefined = undefined;

  const originalResJson = res.json;
  res.json = function (bodyJson, ...args) {
    capturedJsonResponse = bodyJson;
    return originalResJson.apply(res, [bodyJson, ...args]);
  };

  res.on("finish", () => {
    const duration = Date.now() - start;
    if (path.startsWith("/api")) {
      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;
      if (capturedJsonResponse) {
        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;
      }

      if (logLine.length > 80) {
        logLine = logLine.slice(0, 79) + "â€¦";
      }

      log(logLine);
    }
  });

  next();
});

(async () => {
  // Seed production users on startup (only creates if they don't exist)
  if (app.get("env") === "production") {
    await seedProductionUsers();
  }

  const server = await registerRoutes(app);

  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {
    const status = err.status || err.statusCode || 500;
    const message = err.message || "Internal Server Error";

    res.status(status).json({ message });
    throw err;
  });

  // importantly only setup vite in development and after
  // setting up all the other routes so the catch-all route
  // doesn't interfere with the other routes
  if (app.get("env") === "development") {
    await setupVite(app, server);
  } else {
    serveStatic(app);
  }

  // ALWAYS serve the app on the port specified in the environment variable PORT
  // Other ports are firewalled. Default to 5000 if not specified.
  // this serves both the API and the client.
  // It is the only port that is not firewalled.
  const port = parseInt(process.env.PORT || '5000', 10);
  server.listen({
    port,
    host: "0.0.0.0",
    reusePort: true,
  }, () => {
    log(`serving on port ${port}`);
  });
})();
============================================================
STOP COPYING HERE
============================================================

After you save this file and run "npx tsx server/index.ts", 
the server should start successfully!

You should see:
[Server] Database connected
[Server] Server listening on port 6000

Then open: http://localhost:6000

============================================================
